/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Mock,
  ERC721MockInterface,
} from "../../../contracts/mocks/ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200189a3803806200189a8339810160408190526200003491620001e1565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000287565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b6020821081036200028157634e487b7160e01b600052602260045260246000fd5b50919050565b61160380620002976000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063a144819411610071578063a144819414610259578063a22cb4651461026c578063b88d4fde1461027f578063c87b56dd14610292578063e985e9c5146102a557600080fd5b80636352211e146102025780636c0360eb1461021557806370a082311461021d5780638832e6e31461023e57806395d89b411461025157600080fd5b806323b872dd116100f457806323b872dd146101a357806340c10f19146101b657806342842e0e146101c957806342966c68146101dc5780634f558e79146101ef57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046110a6565b6102e1565b60405190151581526020015b60405180910390f35b610156610333565b604051610145919061111b565b61017661017136600461112e565b6103c5565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611163565b61045f565b005b6101a16101b136600461118d565b610574565b6101a16101c4366004611163565b6105a5565b6101a16101d736600461118d565b6105b3565b6101a16101ea36600461112e565b6105ce565b6101396101fd36600461112e565b6105da565b61017661021036600461112e565b6105f9565b610156610670565b61023061022b3660046111c9565b61068c565b604051908152602001610145565b6101a161024c366004611287565b610713565b61015661071e565b6101a1610267366004611163565b61072d565b6101a161027a3660046112de565b610737565b6101a161028d36600461131a565b610742565b6101566102a036600461112e565b61077a565b6101396102b3366004611382565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061031257506001600160e01b03198216635b5e139f60e01b145b8061032d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610342906113b5565b80601f016020809104026020016040519081016040528092919081815260200182805461036e906113b5565b80156103bb5780601f10610390576101008083540402835291602001916103bb565b820191906000526020600020905b81548152906001019060200180831161039e57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104435760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061046a826105f9565b9050806001600160a01b0316836001600160a01b0316036104d75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161043a565b336001600160a01b03821614806104f357506104f381336102b3565b6105655760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161043a565b61056f8383610862565b505050565b61057e33826108d0565b61059a5760405162461bcd60e51b815260040161043a906113ef565b61056f8383836109c7565b6105af8282610b63565b5050565b61056f83838360405180602001604052806000815250610742565b6105d781610ca5565b50565b6000818152600260205260408120546001600160a01b0316151561032d565b6000818152600260205260408120546001600160a01b03168061032d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161043a565b606061068760408051602081019091526000815290565b905090565b60006001600160a01b0382166106f75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161043a565b506001600160a01b031660009081526003602052604090205490565b61056f838383610d40565b606060018054610342906113b5565b6105af8282610d73565b6105af338383610d8d565b61074c33836108d0565b6107685760405162461bcd60e51b815260040161043a906113ef565b61077484848484610e5b565b50505050565b6000818152600260205260409020546060906001600160a01b03166107f95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161043a565b600061081060408051602081019091526000815290565b90506000815111610830576040518060200160405280600081525061085b565b8061083a84610e8e565b60405160200161084b929190611440565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610897826105f9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166109495760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161043a565b6000610954836105f9565b9050806001600160a01b0316846001600160a01b0316148061099b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109bf5750836001600160a01b03166109b4846103c5565b6001600160a01b0316145b949350505050565b826001600160a01b03166109da826105f9565b6001600160a01b031614610a3e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161043a565b6001600160a01b038216610aa05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161043a565b610aab600082610862565b6001600160a01b0383166000908152600360205260408120805460019290610ad4908490611485565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b0290849061149c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610bb95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161043a565b6000818152600260205260409020546001600160a01b031615610c1e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161043a565b6001600160a01b0382166000908152600360205260408120805460019290610c4790849061149c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610cb0826105f9565b9050610cbd600083610862565b6001600160a01b0381166000908152600360205260408120805460019290610ce6908490611485565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610d4a8383610b63565b610d576000848484610f8f565b61056f5760405162461bcd60e51b815260040161043a906114b4565b6105af828260405180602001604052806000815250610d40565b816001600160a01b0316836001600160a01b031603610dee5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161043a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e668484846109c7565b610e7284848484610f8f565b6107745760405162461bcd60e51b815260040161043a906114b4565b606081600003610eb55750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610edf5780610ec981611506565b9150610ed89050600a83611535565b9150610eb9565b60008167ffffffffffffffff811115610efa57610efa6111e4565b6040519080825280601f01601f191660200182016040528015610f24576020820181803683370190505b5090505b84156109bf57610f39600183611485565b9150610f46600a86611549565b610f5190603061149c565b60f81b818381518110610f6657610f6661155d565b60200101906001600160f81b031916908160001a905350610f88600a86611535565b9450610f28565b60006001600160a01b0384163b1561108557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fd3903390899088908890600401611573565b6020604051808303816000875af192505050801561100e575060408051601f3d908101601f1916820190925261100b918101906115b0565b60015b61106b573d80801561103c576040519150601f19603f3d011682016040523d82523d6000602084013e611041565b606091505b5080516000036110635760405162461bcd60e51b815260040161043a906114b4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109bf565b506001949350505050565b6001600160e01b0319811681146105d757600080fd5b6000602082840312156110b857600080fd5b813561085b81611090565b60005b838110156110de5781810151838201526020016110c6565b838111156107745750506000910152565b600081518084526111078160208601602086016110c3565b601f01601f19169290920160200192915050565b60208152600061085b60208301846110ef565b60006020828403121561114057600080fd5b5035919050565b80356001600160a01b038116811461115e57600080fd5b919050565b6000806040838503121561117657600080fd5b61117f83611147565b946020939093013593505050565b6000806000606084860312156111a257600080fd5b6111ab84611147565b92506111b960208501611147565b9150604084013590509250925092565b6000602082840312156111db57600080fd5b61085b82611147565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261120b57600080fd5b813567ffffffffffffffff80821115611226576112266111e4565b604051601f8301601f19908116603f0116810190828211818310171561124e5761124e6111e4565b8160405283815286602085880101111561126757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561129c57600080fd5b6112a584611147565b925060208401359150604084013567ffffffffffffffff8111156112c857600080fd5b6112d4868287016111fa565b9150509250925092565b600080604083850312156112f157600080fd5b6112fa83611147565b91506020830135801515811461130f57600080fd5b809150509250929050565b6000806000806080858703121561133057600080fd5b61133985611147565b935061134760208601611147565b925060408501359150606085013567ffffffffffffffff81111561136a57600080fd5b611376878288016111fa565b91505092959194509250565b6000806040838503121561139557600080fd5b61139e83611147565b91506113ac60208401611147565b90509250929050565b600181811c908216806113c957607f821691505b6020821081036113e957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516114528184602088016110c3565b8351908301906114668183602088016110c3565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156114975761149761146f565b500390565b600082198211156114af576114af61146f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600182016115185761151861146f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826115445761154461151f565b500490565b6000826115585761155861151f565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115a6908301846110ef565b9695505050505050565b6000602082840312156115c257600080fd5b815161085b8161109056fea26469706673582212208b35c32aeec7e55d2a6fcbfedd16f31a7957918d52443b55bcbf8e091204e7e864736f6c634300080e0033";

type ERC721MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mock__factory extends ContractFactory {
  constructor(...args: ERC721MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC721Mock>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  override connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
