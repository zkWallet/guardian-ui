/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRecoveryInternal,
  IRecoveryInternalInterface,
} from "../../../contracts/recovery/IRecoveryInternal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IRecoveryInternal.RecoveryStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "majority",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nominee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "counter",
        type: "uint8",
      },
    ],
    name: "RecoveryUpdated",
    type: "event",
  },
];

export class IRecoveryInternal__factory {
  static readonly abi = _abi;
  static createInterface(): IRecoveryInternalInterface {
    return new utils.Interface(_abi) as IRecoveryInternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRecoveryInternal {
    return new Contract(address, _abi, signerOrProvider) as IRecoveryInternal;
  }
}
