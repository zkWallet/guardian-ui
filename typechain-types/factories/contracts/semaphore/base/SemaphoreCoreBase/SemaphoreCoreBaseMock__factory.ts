/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SemaphoreCoreBaseMock,
  SemaphoreCoreBaseMockInterface,
} from "../../../../../contracts/semaphore/base/SemaphoreCoreBase/SemaphoreCoreBaseMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "NullifierHashAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "signal",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "externalNullifier",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "contract IVerifier",
        name: "verifier",
        type: "address",
      },
    ],
    name: "___verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610437806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a9ffbaf14610030575b600080fd5b61004361003e3660046102ac565b610045565b005b61005386868686868661005b565b505050505050565b60008481527f2e80343f7be649afb4507a40421854eda29bc956f126850e8d1f99d3fcc3131e602052604090205460ff16156100fc5760405162461bcd60e51b815260206004820152603660248201527f53656d6170686f7265436f72653a20796f752063616e6e6f7420757365207468604482015275652073616d65206e756c6c696669657220747769636560501b606482015260840160405180910390fd5b600061010787610275565b9050816001600160a01b0316635fe8c13b6040518060400160405280866000600881106101365761013661031b565b60200201358152602001866001600881106101535761015361031b565b60200201359052604080516080810182528782013591810191825290819060608201896003602002013581525081526020016040518060400160405280896004600881106101a3576101a361031b565b60200201358152602001896005600881106101c0576101c061031b565b602002013590529052604080518082019091528088600660200201358152602001886007600881106101f4576101f461031b565b602002013581525060405180608001604052808c81526020018b81526020018781526020018a8152506040518563ffffffff1660e01b815260040161023c949392919061035a565b60006040518083038186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b5050505050505050505050565b600060088260405160200161028c91815260200190565b60408051601f198184030181529190528051602090910120901c92915050565b6000806000806000806101a087890312156102c657600080fd5b863595506020870135945060408701359350606087013592506101808701888111156102f157600080fd5b608088019250356001600160a01b038116811461030d57600080fd5b809150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b8060005b6002811015610354578151845260209384019390910190600101610335565b50505050565b61018081016103698287610331565b60408083018660005b600280821061038157506103bc565b82518460005b838110156103a5578251825260209283019290910190600101610387565b505050928401925060209190910190600101610372565b505050506103cd60c0830185610331565b61010082018360005b60048110156103f55781518352602092830192909101906001016103d6565b5050509594505050505056fea2646970667358221220f57b861ddac7f4910d3fb035eb8c831a598ec40cfa763888c58eb9236261f77664736f6c634300080e0033";

type SemaphoreCoreBaseMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreCoreBaseMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SemaphoreCoreBaseMock__factory extends ContractFactory {
  constructor(...args: SemaphoreCoreBaseMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SemaphoreCoreBaseMock> {
    return super.deploy(overrides || {}) as Promise<SemaphoreCoreBaseMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SemaphoreCoreBaseMock {
    return super.attach(address) as SemaphoreCoreBaseMock;
  }
  override connect(signer: Signer): SemaphoreCoreBaseMock__factory {
    return super.connect(signer) as SemaphoreCoreBaseMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreCoreBaseMockInterface {
    return new utils.Interface(_abi) as SemaphoreCoreBaseMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreCoreBaseMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SemaphoreCoreBaseMock;
  }
}
