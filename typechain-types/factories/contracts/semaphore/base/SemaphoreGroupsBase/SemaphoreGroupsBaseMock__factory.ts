/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SemaphoreGroupsBaseMock,
  SemaphoreGroupsBaseMockInterface,
} from "../../../../../contracts/semaphore/base/SemaphoreGroupsBase/SemaphoreGroupsBaseMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "GroupAdminUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
    ],
    name: "GroupCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "treeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "LeafInserted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "treeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "LeafRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
    ],
    name: "TreeCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "identityCommitments",
        type: "uint256[]",
      },
    ],
    name: "addMembers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "createGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getDepth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getGroupAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getNumberOfLeaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "proofSiblings",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "proofPathIndices",
        type: "uint8[]",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "updateGroupAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611850806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063568ee82611610066578063568ee826146100e657806375e618c9146100f95780639b24b3b014610123578063a9961c9414610144578063b9c78c2b1461016f57600080fd5b806304245371146100985780631783efc3146100ad5780631c57d8ca146100c057806343989f85146100d3575b600080fd5b6100ab6100a6366004611237565b610182565b005b6100ab6100bb366004611301565b6101d3565b6100ab6100ce366004611350565b6101e7565b6100ab6100e13660046113e2565b610247565b6100ab6100f4366004611465565b61026b565b61010c610107366004611491565b6102bb565b60405160ff90911681526020015b60405180910390f35b610136610131366004611491565b6102cc565b60405190815260200161011a565b610157610152366004611491565b6102d7565b6040516001600160a01b03909116815260200161011a565b61013661017d366004611491565b6102e2565b61018c8282610306565b60005b81518110156101cd576101bb838383815181106101ae576101ae6114aa565b60200260200101516101d3565b806101c5816114d6565b91505061018f565b505b5050565b6101dd8282610306565b6101cf828261036c565b6101f3848484846103c5565b6101fe84848461044a565b6102088482610490565b6040516001600160a01b0382169060009086907f0ba83579a0e79193ef649b9f5a8759d35af086ba62a3e207b52e4a8ae30d49e3908390a45b50505050565b6102558686868686866104da565b610263868686868686610541565b505050505050565b6102758282610306565b61027f8282610490565b6040516001600160a01b03821690339084907f0ba83579a0e79193ef649b9f5a8759d35af086ba62a3e207b52e4a8ae30d49e390600090a45050565b60006102c6826105a1565b92915050565b60006102c6826105c3565b60006102c6826105e5565b60008181526000805160206117db83398151915260205260408120600201546102c6565b81610310816105a1565b60ff1660000361033b5760405162461bcd60e51b8152600401610332906114ef565b60405180910390fd5b8233610346826105e5565b6001600160a01b0316146102415760405162461bcd60e51b815260040161033290611536565b610376828261061f565b6000610381836105c3565b604080518481526020810183905291925084917f03fd27265b7dd1f55558bedc22a58fa3b10afb1be776e614bd5a7ba7b949940691015b60405180910390a2505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b0316331461043e5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610332565b61024184848484610871565b610455838383610991565b6040805160ff841681526020810183905284917fc3082aa494e9088c2c9f0fb62a0b6bd46e6699acb94cfba35be29b95a93f68c891016103b8565b60008281527f44acce4aaef954270f6d29b389ff2c226212662a4788fd9168a1db9aacc1d25e6020526040902080546001600160a01b0319166001600160a01b0383161790555050565b856104e4816105a1565b60ff166000036105065760405162461bcd60e51b8152600401610332906114ef565b8633610511826105e5565b6001600160a01b0316146105375760405162461bcd60e51b815260040161033290611536565b5050505050505050565b61054f868686868686610b66565b600061055a876105c3565b604080518881526020810183905291925088917fe270325ded177064d7bda473e6519ef40a291058c41286f71a6e4872f1e9ab5c910160405180910390a250505050505050565b60009081526000805160206117db833981519152602052604090205460ff1690565b60009081526000805160206117db833981519152602052604090206001015490565b60009081527f44acce4aaef954270f6d29b389ff2c226212662a4788fd9168a1db9aacc1d25e60205260409020546001600160a01b031690565b60008281526000805160206117db8339815191526020526040902060028101549082906000805160206117fb833981519152821061066f5760405162461bcd60e51b815260040161033290611581565b610678856105a1565b6106839060026116c2565b83106106dd5760405162461bcd60e51b815260206004820152602360248201527f496e6372656d656e74616c42696e617279547265653a207472656520697320666044820152621d5b1b60ea1b6064820152608401610332565b60005b6106e9866105a1565b60ff168160ff161015610829576107016002856116ee565b6000036107635760408051808201825284815260008881526000805160206117db833981519152602090815283822060ff861680845260039091018252848320548285015282526004860190529190912061075d9160026111ce565b5061077e565b60ff8116600090815260048301602052604090208390600101555b60ff81166000908152600480840160205260409182902091516314d2f97b60e11b815273__$6d81c1d65787d697695b56adedd76022ba$__926329a5f2f6926107c79201611702565b602060405180830381865af41580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190611733565b925061081560028561174c565b93508061082181611760565b9150506106e0565b5061085285836000805160206117db8339815191525b6000928352602052604090912060010155565b61086a6000805160206117db83398151915286610e79565b5050505050565b836000805160206117fb83398151915281106108c65760405162461bcd60e51b81526020600482015260146024820152735343414c41525f4f55545f4f465f424f554e445360601b6044820152606401610332565b6108cf856105a1565b60ff161561092b5760405162461bcd60e51b8152602060048201526024808201527f53656d6170686f726547726f757073426173653a2047524f55505f49445f45586044820152634953545360e01b6064820152608401610332565b6001600160a01b03821661086a5760405162461bcd60e51b815260206004820152602760248201527f53656d6170686f726547726f757073426173653a2041444d494e5f5a45524f5f6044820152664144445245535360c81b6064820152608401610332565b6000805160206117fb83398151915281106109be5760405162461bcd60e51b815260040161033290611581565b60008260ff161180156109d55750602060ff831611155b610a475760405162461bcd60e51b815260206004820152603a60248201527f496e6372656d656e74616c42696e617279547265653a2074726565206465707460448201527f68206d757374206265206265747765656e203120616e642033320000000000006064820152608401610332565b60008381526000805160206117db83398151915260205260409020805460ff191660ff841617905560005b8260ff168160ff161015610b4c5760008481526000805160206117db8339815191526020908152604080832060ff8516845260030190915290208290556040805180820182528381526020810184905290516314d2f97b60e11b815273__$6d81c1d65787d697695b56adedd76022ba$__916329a5f2f691610af7919060040161177f565b602060405180830381865af4158015610b14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b389190611733565b915080610b4481611760565b915050610a72565b506101cd83826000805160206117db83398151915261083f565b610b74868686868686610ea4565b610bdc5760405162461bcd60e51b815260206004820152603360248201527f496e6372656d656e74616c42696e617279547265653a206c656166206973206e6044820152726f742070617274206f6620746865207472656560681b6064820152608401610332565b60008681526000805160206117db833981519152602090815260408083208380526003810190925282205490915b610c13896105a1565b60ff168160ff161015610e5f5784848260ff16818110610c3557610c356114aa565b9050602002016020810190610c4a91906117a7565b60ff16600003610d535760ff8116600090815260048401602052604090206001015487878360ff16818110610c8157610c816114aa565b9050602002013503610ca55760ff8116600090815260048401602052604090208290555b73__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808581526020018a8a8660ff16818110610ce557610ce56114aa565b905060200201358152506040518263ffffffff1660e01b8152600401610d0b919061177f565b602060405180830381865af4158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c9190611733565b9150610e4d565b60ff811660008181526004850160205260409020549088908890818110610d7c57610d7c6114aa565b9050602002013503610da35760ff8116600090815260048401602052604090208290600101555b73__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808a8a8660ff16818110610ddd57610ddd6114aa565b905060200201358152602001858152506040518263ffffffff1660e01b8152600401610e09919061177f565b602060405180830381865af4158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190611733565b91505b80610e5781611760565b915050610c0a565b5061053788826000805160206117db83398151915261083f565b6000818152602083905260408120600201805460019290610e9b9084906117c2565b90915550505050565b60006000805160206117fb8339815191528610610ed35760405162461bcd60e51b815260040161033290611581565b610edc876105a1565b60ff1682148015610ef75750610ef1876105a1565b60ff1684145b610f605760405162461bcd60e51b815260206004820152603460248201527f496e6372656d656e74616c42696e617279547265653a206c656e677468206f66604482015273081c185d1a081a5cc81b9bdd0818dbdc9c9958dd60621b6064820152608401610332565b8560005b610f6d896105a1565b60ff168160ff1610156111b8576000805160206117fb83398151915287878360ff16818110610f9e57610f9e6114aa565b905060200201351061101a576040805162461bcd60e51b81526020600482015260248101919091527f496e6372656d656e74616c42696e617279547265653a207369626c696e67206e60448201527f6f6465206d757374206265203c20534e41524b5f5343414c41525f4649454c446064820152608401610332565b84848260ff1681811061102f5761102f6114aa565b905060200201602081019061104491906117a7565b60ff166000036110fc5773__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808581526020018a8a8660ff1681811061108e5761108e6114aa565b905060200201358152506040518263ffffffff1660e01b81526004016110b4919061177f565b602060405180830381865af41580156110d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f59190611733565b91506111a6565b73__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808a8a8660ff16818110611136576111366114aa565b905060200201358152602001858152506040518263ffffffff1660e01b8152600401611162919061177f565b602060405180830381865af415801561117f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a39190611733565b91505b806111b081611760565b915050610f64565b506111c2886105c3565b14979650505050505050565b82600281019282156111fc579160200282015b828111156111fc5782518255916020019190600101906111e1565b5061120892915061120c565b5090565b5b80821115611208576000815560010161120d565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561124a57600080fd5b8235915060208084013567ffffffffffffffff8082111561126a57600080fd5b818601915086601f83011261127e57600080fd5b81358181111561129057611290611221565b8060051b604051601f19603f830116810181811085821117156112b5576112b5611221565b6040529182528482019250838101850191898311156112d357600080fd5b938501935b828510156112f1578435845293850193928501926112d8565b8096505050505050509250929050565b6000806040838503121561131457600080fd5b50508035926020909101359150565b803560ff8116811461133457600080fd5b919050565b80356001600160a01b038116811461133457600080fd5b6000806000806080858703121561136657600080fd5b8435935061137660208601611323565b92506040850135915061138b60608601611339565b905092959194509250565b60008083601f8401126113a857600080fd5b50813567ffffffffffffffff8111156113c057600080fd5b6020830191508360208260051b85010111156113db57600080fd5b9250929050565b600080600080600080608087890312156113fb57600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561142157600080fd5b61142d8a838b01611396565b9096509450606089013591508082111561144657600080fd5b5061145389828a01611396565b979a9699509497509295939492505050565b6000806040838503121561147857600080fd5b8235915061148860208401611339565b90509250929050565b6000602082840312156114a357600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114e8576114e86114c0565b5060010190565b60208082526027908201527f53656d6170686f726547726f757073426173653a2047524f55505f49445f4e4f6040820152661517d1561254d560ca1b606082015260800190565b6020808252602b908201527f53656d6170686f726547726f757073426173653a2053454e4445525f4e4f4e5f60408201526a23a927aaa82fa0a226a4a760a91b606082015260800190565b60208082526038908201527f496e6372656d656e74616c42696e617279547265653a206c656166206d75737460408201527f206265203c20534e41524b5f5343414c41525f4649454c440000000000000000606082015260800190565b600181815b808511156116195781600019048211156115ff576115ff6114c0565b8085161561160c57918102915b93841c93908002906115e3565b509250929050565b600082611630575060016102c6565b8161163d575060006102c6565b8160018114611653576002811461165d57611679565b60019150506102c6565b60ff84111561166e5761166e6114c0565b50506001821b6102c6565b5060208310610133831016604e8410600b841016171561169c575081810a6102c6565b6116a683836115de565b80600019048211156116ba576116ba6114c0565b029392505050565b60006116d160ff841683611621565b9392505050565b634e487b7160e01b600052601260045260246000fd5b6000826116fd576116fd6116d8565b500690565b60408101818360005b600281101561172a57815483526020909201916001918201910161170b565b50505092915050565b60006020828403121561174557600080fd5b5051919050565b60008261175b5761175b6116d8565b500490565b600060ff821660ff8103611776576117766114c0565b60010192915050565b60408101818360005b600281101561172a578151835260209283019290910190600101611788565b6000602082840312156117b957600080fd5b6116d182611323565b600082198211156117d5576117d56114c0565b50019056fe18009942081384ebf013f551c6956278f8f7e6b5ba58de96a877e7d2e169e67030644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122038b586547a4c7906541d59ad335be18b916d5319ecf4b65b3c9c289d93c11bfe64736f6c634300080e0033";

type SemaphoreGroupsBaseMockConstructorParams =
  | [
      linkLibraryAddresses: SemaphoreGroupsBaseMockLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreGroupsBaseMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SemaphoreGroupsBaseMock__factory extends ContractFactory {
  constructor(...args: SemaphoreGroupsBaseMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SemaphoreGroupsBaseMock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SemaphoreGroupsBaseMockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6d81c1d65787d697695b56adedd76022ba\\$__", "g"),
      linkLibraryAddresses["contracts/utils/cryptography/Hashes.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SemaphoreGroupsBaseMock> {
    return super.deploy(overrides || {}) as Promise<SemaphoreGroupsBaseMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SemaphoreGroupsBaseMock {
    return super.attach(address) as SemaphoreGroupsBaseMock;
  }
  override connect(signer: Signer): SemaphoreGroupsBaseMock__factory {
    return super.connect(signer) as SemaphoreGroupsBaseMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreGroupsBaseMockInterface {
    return new utils.Interface(_abi) as SemaphoreGroupsBaseMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreGroupsBaseMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SemaphoreGroupsBaseMock;
  }
}

export interface SemaphoreGroupsBaseMockLibraryAddresses {
  ["contracts/utils/cryptography/Hashes.sol:PoseidonT3"]: string;
}
