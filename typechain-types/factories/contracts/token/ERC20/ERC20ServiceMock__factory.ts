/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20ServiceMock,
  ERC20ServiceMockInterface,
} from "../../../../contracts/token/ERC20/ERC20ServiceMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20TokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20TokenTracked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balanceOfERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTrackedERC20Tokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "registerERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20From",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b64806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639db5dbe41161005b5780639db5dbe4146100d4578063a67755c2146100e7578063a8e5e4aa146100fa578063d93db24f1461010d57600080fd5b806307940ee7146100825780632137b20f146100aa5780633bb810c0146100bf575b600080fd5b610095610090366004610890565b61012e565b60405190151581526020015b60405180910390f35b6100b26101c0565b6040516100a191906108db565b6100d26100cd366004610928565b6101cf565b005b6100956100e236600461094a565b6101e4565b6100d26100f5366004610928565b61026d565b61009561010836600461094a565b61027f565b61012061011b366004610928565b6102c1565b6040519081526020016100a1565b600061013c85858585610332565b6040516323b872dd60e01b81526001600160a01b0385811660048301528481166024830152604482018490528616906323b872dd906064016020604051808303816000875af1158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610986565b95945050505050565b60606101ca610384565b905090565b6101d8816103f6565b6101e181610436565b50565b60006101f1848484610485565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044015b6020604051808303816000875af1158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190610986565b949350505050565b610276816104cc565b6101e18161050c565b600061028c848484610485565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b390604401610222565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906109a8565b92915050565b600080516020610aef833981519152546001600160a01b031633146103725760405162461bcd60e51b8152600401610369906109c1565b60405180910390fd5b61037e84848484610563565b50505050565b6060600080516020610b0f8339815191526001018054806020026020016040519081016040528092919081815260200182805480156103ec57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103ce575b5050505050905090565b600080516020610aef833981519152546001600160a01b0316331461042d5760405162461bcd60e51b8152600401610369906109c1565b6101e181610593565b61044e600080516020610b0f83398151915282610624565b6040516001600160a01b038216907ffc0df4c937d034a35e004d3be20b22b3fa469059b9048555932f16f0b219ca4d90600090a250565b600080516020610aef833981519152546001600160a01b031633146104bc5760405162461bcd60e51b8152600401610369906109c1565b6104c783838361067f565b505050565b600080516020610aef833981519152546001600160a01b031633146105035760405162461bcd60e51b8152600401610369906109c1565b6101e1816106a8565b610524600080516020610b0f833981519152826106fb565b6040516001600160a01b03821681527f90387a30bef2980f7747512c8766fbb69ddb92b45d201abf34eb8915299f8d6a9060200160405180910390a150565b83600061056f8261084c565b1161058c5760405162461bcd60e51b8152600401610369906109f8565b5050505050565b6001600160a01b0381166105b95760405162461bcd60e51b815260040161036990610a2f565b6105c28161084c565b156101e15760405162461bcd60e51b815260206004820152602c60248201527f4552433230536572766963653a20455243323020746f6b656e20697320616c7260448201526b1958591e481d1c9858dad95960a21b6064820152608401610369565b60018083015490600090610639908390610a93565b6001808601805491820181556000908152602080822090920180546001600160a01b039097166001600160a01b0319909716871790559485529490945250506040902055565b82600061068b8261084c565b1161037e5760405162461bcd60e51b8152600401610369906109f8565b8060006106b48261084c565b116106d15760405162461bcd60e51b8152600401610369906109f8565b6001600160a01b0382166106f75760405162461bcd60e51b815260040161036990610a2f565b5050565b6001600160a01b03811660009081526020839052604081205490610720600183610aab565b90506001848101546107329190610aab565b81146107f85760018085018054909161074a91610aab565b8154811061075a5761075a610ac2565b6000918252602090912001546001850180546001600160a01b03909216918390811061078857610788610ac2565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550818460000160008660010184815481106107d2576107d2610ac2565b60009182526020808320909101546001600160a01b031683528201929092526040019020555b8360010180548061080b5761080b610ad8565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b039490941681529390925250506040812055565b6001600160a01b03166000908152600080516020610b0f833981519152602052604090205490565b80356001600160a01b038116811461088b57600080fd5b919050565b600080600080608085870312156108a657600080fd5b6108af85610874565b93506108bd60208601610874565b92506108cb60408601610874565b9396929550929360600135925050565b6020808252825182820181905260009190848201906040850190845b8181101561091c5783516001600160a01b0316835292840192918401916001016108f7565b50909695505050505050565b60006020828403121561093a57600080fd5b61094382610874565b9392505050565b60008060006060848603121561095f57600080fd5b61096884610874565b925061097660208501610874565b9150604084013590509250925092565b60006020828403121561099857600080fd5b8151801515811461094357600080fd5b6000602082840312156109ba57600080fd5b5051919050565b6020808252601d908201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604082015260600190565b6020808252601f908201527f4552433230536572766963653a20746f6b656e206e6f7420747261636b656400604082015260600190565b6020808252602e908201527f4552433230536572766963653a20746f6b656e4164647265737320697320746860408201526d65207a65726f206164647265737360901b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aa657610aa6610a7d565b500190565b600082821015610abd57610abd610a7d565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfe8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460fcac9c4df6614b71838bf4d9c5317076838004b2a6c8cccf90e0375f6f4dafc2a2646970667358221220e45457d361ea996400c7f1baa436786824ea060db8dcdf2e0197457142ddeb7164736f6c634300080e0033";

type ERC20ServiceMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ServiceMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20ServiceMock__factory extends ContractFactory {
  constructor(...args: ERC20ServiceMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20ServiceMock> {
    return super.deploy(overrides || {}) as Promise<ERC20ServiceMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20ServiceMock {
    return super.attach(address) as ERC20ServiceMock;
  }
  override connect(signer: Signer): ERC20ServiceMock__factory {
    return super.connect(signer) as ERC20ServiceMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20ServiceMockInterface {
    return new utils.Interface(_abi) as ERC20ServiceMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20ServiceMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20ServiceMock;
  }
}
