/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Facet,
  ERC20FacetInterface,
} from "../../../contracts/facets/ERC20Facet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20TokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20TokenTracked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balanceOfERC20",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20FacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTrackedERC20Tokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "registerERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20From",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610beb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a67755c21161005b578063a67755c2146100f2578063a8e5e4aa14610105578063ba8cd84514610118578063d93db24f1461013f57600080fd5b806307940ee71461008d5780632137b20f146100b55780633bb810c0146100ca5780639db5dbe4146100df575b600080fd5b6100a061009b3660046108c2565b610160565b60405190151581526020015b60405180910390f35b6100bd6101f2565b6040516100ac919061090d565b6100dd6100d836600461095a565b610201565b005b6100a06100ed36600461097c565b610216565b6100dd61010036600461095a565b61029f565b6100a061011336600461097c565b6102b1565b6040805180820182526005815264302e302e3160d81b602082015290516100ac91906109b8565b61015261014d36600461095a565b6102f3565b6040519081526020016100ac565b600061016e85858585610364565b6040516323b872dd60e01b81526001600160a01b0385811660048301528481166024830152604482018490528616906323b872dd906064016020604051808303816000875af11580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e99190610a0d565b95945050505050565b60606101fc6103b6565b905090565b61020a81610428565b61021381610468565b50565b60006102238484846104b7565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044015b6020604051808303816000875af1158015610273573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102979190610a0d565b949350505050565b6102a8816104fe565b6102138161053e565b60006102be8484846104b7565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b390604401610254565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190610a2f565b92915050565b600080516020610b76833981519152546001600160a01b031633146103a45760405162461bcd60e51b815260040161039b90610a48565b60405180910390fd5b6103b084848484610595565b50505050565b6060600080516020610b9683398151915260010180548060200260200160405190810160405280929190818152602001828054801561041e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610400575b5050505050905090565b600080516020610b76833981519152546001600160a01b0316331461045f5760405162461bcd60e51b815260040161039b90610a48565b610213816105c5565b610480600080516020610b9683398151915282610656565b6040516001600160a01b038216907ffc0df4c937d034a35e004d3be20b22b3fa469059b9048555932f16f0b219ca4d90600090a250565b600080516020610b76833981519152546001600160a01b031633146104ee5760405162461bcd60e51b815260040161039b90610a48565b6104f98383836106b1565b505050565b600080516020610b76833981519152546001600160a01b031633146105355760405162461bcd60e51b815260040161039b90610a48565b610213816106da565b610556600080516020610b968339815191528261072d565b6040516001600160a01b03821681527f90387a30bef2980f7747512c8766fbb69ddb92b45d201abf34eb8915299f8d6a9060200160405180910390a150565b8360006105a18261087e565b116105be5760405162461bcd60e51b815260040161039b90610a7f565b5050505050565b6001600160a01b0381166105eb5760405162461bcd60e51b815260040161039b90610ab6565b6105f48161087e565b156102135760405162461bcd60e51b815260206004820152602c60248201527f4552433230536572766963653a20455243323020746f6b656e20697320616c7260448201526b1958591e481d1c9858dad95960a21b606482015260840161039b565b6001808301549060009061066b908390610b1a565b6001808601805491820181556000908152602080822090920180546001600160a01b039097166001600160a01b0319909716871790559485529490945250506040902055565b8260006106bd8261087e565b116103b05760405162461bcd60e51b815260040161039b90610a7f565b8060006106e68261087e565b116107035760405162461bcd60e51b815260040161039b90610a7f565b6001600160a01b0382166107295760405162461bcd60e51b815260040161039b90610ab6565b5050565b6001600160a01b03811660009081526020839052604081205490610752600183610b32565b90506001848101546107649190610b32565b811461082a5760018085018054909161077c91610b32565b8154811061078c5761078c610b49565b6000918252602090912001546001850180546001600160a01b0390921691839081106107ba576107ba610b49565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508184600001600086600101848154811061080457610804610b49565b60009182526020808320909101546001600160a01b031683528201929092526040019020555b8360010180548061083d5761083d610b5f565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b039490941681529390925250506040812055565b6001600160a01b03166000908152600080516020610b96833981519152602052604090205490565b80356001600160a01b03811681146108bd57600080fd5b919050565b600080600080608085870312156108d857600080fd5b6108e1856108a6565b93506108ef602086016108a6565b92506108fd604086016108a6565b9396929550929360600135925050565b6020808252825182820181905260009190848201906040850190845b8181101561094e5783516001600160a01b031683529284019291840191600101610929565b50909695505050505050565b60006020828403121561096c57600080fd5b610975826108a6565b9392505050565b60008060006060848603121561099157600080fd5b61099a846108a6565b92506109a8602085016108a6565b9150604084013590509250925092565b600060208083528351808285015260005b818110156109e5578581018301518582016040015282016109c9565b818111156109f7576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610a1f57600080fd5b8151801515811461097557600080fd5b600060208284031215610a4157600080fd5b5051919050565b6020808252601d908201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604082015260600190565b6020808252601f908201527f4552433230536572766963653a20746f6b656e206e6f7420747261636b656400604082015260600190565b6020808252602e908201527f4552433230536572766963653a20746f6b656e4164647265737320697320746860408201526d65207a65726f206164647265737360901b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b2d57610b2d610b04565b500190565b600082821015610b4457610b44610b04565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfe8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460fcac9c4df6614b71838bf4d9c5317076838004b2a6c8cccf90e0375f6f4dafc2a2646970667358221220343971363d2fbc38e6a9598be642fe2b3d2800b0c31f4d51e83e134b080b0a2064736f6c634300080e0033";

type ERC20FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Facet__factory extends ContractFactory {
  constructor(...args: ERC20FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Facet> {
    return super.deploy(overrides || {}) as Promise<ERC20Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Facet {
    return super.attach(address) as ERC20Facet;
  }
  override connect(signer: Signer): ERC20Facet__factory {
    return super.connect(signer) as ERC20Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FacetInterface {
    return new utils.Interface(_abi) as ERC20FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Facet {
    return new Contract(address, _abi, signerOrProvider) as ERC20Facet;
  }
}
