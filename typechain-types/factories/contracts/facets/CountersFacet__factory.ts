/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CountersFacet,
  CountersFacetInterface,
} from "../../../contracts/facets/CountersFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "Decremented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "Incremented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "Reset",
    type: "event",
  },
  {
    inputs: [],
    name: "countersVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "current",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061062d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631818bde61461005c578063310bd74b1461008c5780633a9ebefd146100a15780637cf5dab0146100b4578063ac03aa1c146100c7575b600080fd5b6040805180820182526005815264302e302e3160d81b602082015290516100839190610543565b60405180910390f35b61009f61009a366004610598565b6100e8565b005b61009f6100af366004610598565b610106565b61009f6100c2366004610598565b610118565b6100da6100d5366004610598565b61012a565b604051908152602001610083565b6100f18161013b565b6100fa816101c2565b6101038161021d565b50565b61010f8161013b565b61010381610286565b610121816102c9565b6101038161034b565b60006101358261038a565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031633146101b95760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b610103816103a9565b60008181526000805160206105d88339815191526020526040812055807f5ae2e83411b15aef3c1609c37f90fc7c912666cfac3ba72a9ba900a39c5bfaa36102098361038a565b60405190815260200160405180910390a250565b60008181526000805160206105d88339815191526020526040902054156101035760405162461bcd60e51b815260206004820152601c60248201527f436f756e746572733a20434f554e544552535f4e4f545f52455345540000000060448201526064016101b0565b61029e6000805160206105d883398151915282610456565b807f847bc9dfeccb5e1f46d639d8427a2dffec2db7148a5d315341194d6a7aafe4e56102098361038a565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031633146103425760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101b0565b610103816104cb565b6103636000805160206105d88339815191528261051b565b807f230c08f549f5f9e591e87490c6c26b3715ba3bdbe74477c4ec927b160763f767610209835b60009081526000805160206105d8833981519152602052604090205490565b80600081116103fa5760405162461bcd60e51b815260206004820152601d60248201527f436f756e746572733a20494e4445585f4f55545f4f465f424f554e445300000060448201526064016101b0565b60006104058261038a565b116104525760405162461bcd60e51b815260206004820152601b60248201527f436f756e746572733a20434f554e5445525f4e4f545f464f554e44000000000060448201526064016101b0565b5050565b600081815260208390526040902054806104b25760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016101b0565b6000918252602092909252604090206000199091019055565b600081116101035760405162461bcd60e51b815260206004820152601d60248201527f436f756e746572733a20494e4445585f4f55545f4f465f424f554e445300000060448201526064016101b0565b600081815260208390526040812080546001929061053a9084906105b1565b90915550505050565b600060208083528351808285015260005b8181101561057057858101830151858201604001528201610554565b81811115610582576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156105aa57600080fd5b5035919050565b600082198211156105d257634e487b7160e01b600052601160045260246000fd5b50019056fe7501651f7c1a1425b363e321895d17d818852dcf57a994e54489b51ae6d4d096a2646970667358221220481863fafdbdf1fd1113159a9aa0c1313f05f56d6667f9b51baa7b59cb3735f464736f6c634300080e0033";

type CountersFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CountersFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CountersFacet__factory extends ContractFactory {
  constructor(...args: CountersFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CountersFacet> {
    return super.deploy(overrides || {}) as Promise<CountersFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CountersFacet {
    return super.attach(address) as CountersFacet;
  }
  override connect(signer: Signer): CountersFacet__factory {
    return super.connect(signer) as CountersFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CountersFacetInterface {
    return new utils.Interface(_abi) as CountersFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CountersFacet {
    return new Contract(address, _abi, signerOrProvider) as CountersFacet;
  }
}
