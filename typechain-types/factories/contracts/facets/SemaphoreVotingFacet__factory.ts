/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SemaphoreVotingFacet,
  SemaphoreVotingFacetInterface,
} from "../../../contracts/facets/SemaphoreVotingFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
    ],
    name: "NullifierHashAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
    ],
    name: "PollCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decryptionKey",
        type: "uint256",
      },
    ],
    name: "PollEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "encryptionKey",
        type: "uint256",
      },
    ],
    name: "PollStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signal",
        type: "bytes32",
      },
    ],
    name: "ProofVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "vote",
        type: "bytes32",
      },
    ],
    name: "VoteAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vote",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
    ],
    name: "createPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decryptionKey",
        type: "uint256",
      },
    ],
    name: "endPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "semaphoreVotingFacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "encryptionKey",
        type: "uint256",
      },
    ],
    name: "startPoll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610961806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806331c1e59d1461005c57806347df85bb14610071578063b359dd4314610084578063bbd8c7db14610097578063f9eb7929146100aa575b600080fd5b61006f61006a3660046106f1565b6100da565b005b61006f61007f366004610745565b6100f5565b61006f610092366004610798565b610109565b61006f6100a5366004610798565b610117565b6040805180820182526005815264302e302e3160d81b602082015290516100d191906107ba565b60405180910390f35b6100e5838383610121565b6100f08383836101aa565b505050565b6101028585858585610243565b5050505050565b6101138282610291565b5050565b61011382826102eb565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b0316331461019f5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6100f083838361033d565b600083815260008051602061090c8339815191526020526040902080546001600160a01b0319166001600160a01b0384161790556101fb83600060008051602061090c8339815191525b91906103ac565b816001600160a01b03167fb447d309fd3b1a27466cdb08ccc02ee5188e9c71fc58af042bafe3e0bb4512308460405161023691815260200190565b60405180910390a2505050565b61025085858585856103e7565b817f9259c591af3680137739dc2b275c388eb1639a143b49022e7062fa162f14776d8560405161028291815260200190565b60405180910390a25050505050565b6102ab82600160008051602061090c8339815191526101f4565b604080518381526020810183905233917f426c5e6bd38728569cc4e1f0a309f506d4c1bc56189920d59343af2639b60d3e91015b60405180910390a25050565b61030582600260008051602061090c8339815191526101f4565b604080518381526020810183905233917f4a0c303670c99ff9b9eab216bcca4f03007fbece83818599a2946ea62c541fde91016102df565b6001600160a01b0382166100f05760405162461bcd60e51b815260206004820152603060248201527f53656d6170686f7265566f74696e673a20636f6f7264696e61746f722069732060448201526f746865207a65726f206164647265737360801b6064820152608401610196565b6000828152602084905260409020805482919060ff60a01b1916600160a01b8360028111156103dd576103dd61080f565b0217905550505050565b60008581527f18009942081384ebf013f551c6956278f8f7e6b5ba58de96a877e7d2e169e670602090815260408083206001810154905460ff168085527f1fd5ae9b688ff1e92cea024147bd3c60ba20584ed7225a597f53b9dde63d587e9093529220546001600160a01b03166104628784888888866104a4565b60008681527f2e80343f7be649afb4507a40421854eda29bc956f126850e8d1f99d3fcc3131e60205260409020805460ff191660011790555050505050505050565b60008481527f2e80343f7be649afb4507a40421854eda29bc956f126850e8d1f99d3fcc3131e602052604090205460ff16156105415760405162461bcd60e51b815260206004820152603660248201527f53656d6170686f7265436f72653a20796f752063616e6e6f7420757365207468604482015275652073616d65206e756c6c696669657220747769636560501b6064820152608401610196565b600061054c876106ba565b9050816001600160a01b0316635fe8c13b60405180604001604052808660006008811061057b5761057b610825565b602002013581526020018660016008811061059857610598610825565b60200201359052604080516080810182528782013591810191825290819060608201896003602002013581525081526020016040518060400160405280896004600881106105e8576105e8610825565b602002013581526020018960056008811061060557610605610825565b6020020135905290526040805180820190915280886006602002013581526020018860076008811061063957610639610825565b602002013581525060405180608001604052808c81526020018b81526020018781526020018a8152506040518563ffffffff1660e01b81526004016106819493929190610864565b60006040518083038186803b15801561069957600080fd5b505afa1580156106ad573d6000803e3d6000fd5b5050505050505050505050565b60006008826040516020016106d191815260200190565b60408051601f198184030181529190528051602090910120901c92915050565b60008060006060848603121561070657600080fd5b8335925060208401356001600160a01b038116811461072457600080fd5b9150604084013560ff8116811461073a57600080fd5b809150509250925092565b600080600080600061018080878903121561075f57600080fd5b8635955060208701359450604087013593506060870135925087818801111561078757600080fd5b506080860190509295509295909350565b600080604083850312156107ab57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b818110156107e7578581018301518582016040015282016107cb565b818111156107f9576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8060005b600281101561085e57815184526020938401939091019060010161083f565b50505050565b6101808101610873828761083b565b60408083018660005b600280821061088b57506108c6565b82518460005b838110156108af578251825260209283019290910190600101610891565b50505092840192506020919091019060010161087c565b505050506108d760c083018561083b565b61010082018360005b60048110156108ff5781518352602092830192909101906001016108e0565b5050509594505050505056fe71cc6fc415e2c7a2cf4d3e53460f98380a338c51fb7683653e59001f128a36c1a26469706673582212205b7d37bccfc08ccc6057f81e29acbbb0988200eb5031493ba5cf4edc995b6d7f64736f6c634300080e0033";

type SemaphoreVotingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreVotingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SemaphoreVotingFacet__factory extends ContractFactory {
  constructor(...args: SemaphoreVotingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SemaphoreVotingFacet> {
    return super.deploy(overrides || {}) as Promise<SemaphoreVotingFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SemaphoreVotingFacet {
    return super.attach(address) as SemaphoreVotingFacet;
  }
  override connect(signer: Signer): SemaphoreVotingFacet__factory {
    return super.connect(signer) as SemaphoreVotingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreVotingFacetInterface {
    return new utils.Interface(_abi) as SemaphoreVotingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreVotingFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SemaphoreVotingFacet;
  }
}
