/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SemaphoreGroupsFacet,
  SemaphoreGroupsFacetInterface,
} from "../../../contracts/facets/SemaphoreGroupsFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "GroupAdminUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
    ],
    name: "GroupCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "treeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "LeafInserted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "treeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leaf",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "LeafRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
    ],
    name: "TreeCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "identityCommitments",
        type: "uint256[]",
      },
    ],
    name: "addMembers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "depth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "zeroValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "createGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getDepth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getGroupAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getNumberOfLeaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "identityCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "proofSiblings",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "proofPathIndices",
        type: "uint8[]",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "semaphoreGroupsFacetVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "updateGroupAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118db806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806371749b3d1161006657806371749b3d1461010457806375e618c9146101345780639b24b3b014610159578063a9961c941461017a578063b9c78c2b146101a557600080fd5b806304245371146100a35780631783efc3146100b85780631c57d8ca146100cb57806343989f85146100de578063568ee826146100f1575b600080fd5b6100b66100b136600461126d565b6101b8565b005b6100b66100c6366004611337565b610209565b6100b66100d9366004611386565b61021d565b6100b66100ec366004611418565b61027d565b6100b66100ff36600461149b565b6102a1565b6040805180820182526005815264302e302e3160d81b6020820152905161012b91906114c7565b60405180910390f35b61014761014236600461151c565b6102f1565b60405160ff909116815260200161012b565b61016c61016736600461151c565b610302565b60405190815260200161012b565b61018d61018836600461151c565b61030d565b6040516001600160a01b03909116815260200161012b565b61016c6101b336600461151c565b610318565b6101c2828261033c565b60005b8151811015610203576101f1838383815181106101e4576101e4611535565b6020026020010151610209565b806101fb81611561565b9150506101c5565b505b5050565b610213828261033c565b61020582826103a2565b610229848484846103fb565b610234848484610480565b61023e84826104c6565b6040516001600160a01b0382169060009086907f0ba83579a0e79193ef649b9f5a8759d35af086ba62a3e207b52e4a8ae30d49e3908390a45b50505050565b61028b868686868686610510565b610299868686868686610577565b505050505050565b6102ab828261033c565b6102b582826104c6565b6040516001600160a01b03821690339084907f0ba83579a0e79193ef649b9f5a8759d35af086ba62a3e207b52e4a8ae30d49e390600090a45050565b60006102fc826105d7565b92915050565b60006102fc826105f9565b60006102fc8261061b565b600081815260008051602061186683398151915260205260408120600201546102fc565b81610346816105d7565b60ff166000036103715760405162461bcd60e51b81526004016103689061157a565b60405180910390fd5b823361037c8261061b565b6001600160a01b0316146102775760405162461bcd60e51b8152600401610368906115c1565b6103ac8282610655565b60006103b7836105f9565b604080518481526020810183905291925084917f03fd27265b7dd1f55558bedc22a58fa3b10afb1be776e614bd5a7ba7b949940691015b60405180910390a2505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031633146104745760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610368565b610277848484846108a7565b61048b8383836109c7565b6040805160ff841681526020810183905284917fc3082aa494e9088c2c9f0fb62a0b6bd46e6699acb94cfba35be29b95a93f68c891016103ee565b60008281527f44acce4aaef954270f6d29b389ff2c226212662a4788fd9168a1db9aacc1d25e6020526040902080546001600160a01b0319166001600160a01b0383161790555050565b8561051a816105d7565b60ff1660000361053c5760405162461bcd60e51b81526004016103689061157a565b86336105478261061b565b6001600160a01b03161461056d5760405162461bcd60e51b8152600401610368906115c1565b5050505050505050565b610585868686868686610b9c565b6000610590876105f9565b604080518881526020810183905291925088917fe270325ded177064d7bda473e6519ef40a291058c41286f71a6e4872f1e9ab5c910160405180910390a250505050505050565b6000908152600080516020611866833981519152602052604090205460ff1690565b6000908152600080516020611866833981519152602052604090206001015490565b60009081527f44acce4aaef954270f6d29b389ff2c226212662a4788fd9168a1db9aacc1d25e60205260409020546001600160a01b031690565b600082815260008051602061186683398151915260205260409020600281015490829060008051602061188683398151915282106106a55760405162461bcd60e51b81526004016103689061160c565b6106ae856105d7565b6106b990600261174d565b83106107135760405162461bcd60e51b815260206004820152602360248201527f496e6372656d656e74616c42696e617279547265653a207472656520697320666044820152621d5b1b60ea1b6064820152608401610368565b60005b61071f866105d7565b60ff168160ff16101561085f57610737600285611779565b600003610799576040805180820182528481526000888152600080516020611866833981519152602090815283822060ff8616808452600390910182528483205482850152825260048601905291909120610793916002611204565b506107b4565b60ff8116600090815260048301602052604090208390600101555b60ff81166000908152600480840160205260409182902091516314d2f97b60e11b815273__$6d81c1d65787d697695b56adedd76022ba$__926329a5f2f6926107fd920161178d565b602060405180830381865af415801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e91906117be565b925061084b6002856117d7565b935080610857816117eb565b915050610716565b5061088885836000805160206118668339815191525b6000928352602052604090912060010155565b6108a060008051602061186683398151915286610eaf565b5050505050565b8360008051602061188683398151915281106108fc5760405162461bcd60e51b81526020600482015260146024820152735343414c41525f4f55545f4f465f424f554e445360601b6044820152606401610368565b610905856105d7565b60ff16156109615760405162461bcd60e51b8152602060048201526024808201527f53656d6170686f726547726f757073426173653a2047524f55505f49445f45586044820152634953545360e01b6064820152608401610368565b6001600160a01b0382166108a05760405162461bcd60e51b815260206004820152602760248201527f53656d6170686f726547726f757073426173653a2041444d494e5f5a45524f5f6044820152664144445245535360c81b6064820152608401610368565b60008051602061188683398151915281106109f45760405162461bcd60e51b81526004016103689061160c565b60008260ff16118015610a0b5750602060ff831611155b610a7d5760405162461bcd60e51b815260206004820152603a60248201527f496e6372656d656e74616c42696e617279547265653a2074726565206465707460448201527f68206d757374206265206265747765656e203120616e642033320000000000006064820152608401610368565b600083815260008051602061186683398151915260205260409020805460ff191660ff841617905560005b8260ff168160ff161015610b825760008481526000805160206118668339815191526020908152604080832060ff8516845260030190915290208290556040805180820182528381526020810184905290516314d2f97b60e11b815273__$6d81c1d65787d697695b56adedd76022ba$__916329a5f2f691610b2d919060040161180a565b602060405180830381865af4158015610b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6e91906117be565b915080610b7a816117eb565b915050610aa8565b506102038382600080516020611866833981519152610875565b610baa868686868686610eda565b610c125760405162461bcd60e51b815260206004820152603360248201527f496e6372656d656e74616c42696e617279547265653a206c656166206973206e6044820152726f742070617274206f6620746865207472656560681b6064820152608401610368565b6000868152600080516020611866833981519152602090815260408083208380526003810190925282205490915b610c49896105d7565b60ff168160ff161015610e955784848260ff16818110610c6b57610c6b611535565b9050602002016020810190610c809190611832565b60ff16600003610d895760ff8116600090815260048401602052604090206001015487878360ff16818110610cb757610cb7611535565b9050602002013503610cdb5760ff8116600090815260048401602052604090208290555b73__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808581526020018a8a8660ff16818110610d1b57610d1b611535565b905060200201358152506040518263ffffffff1660e01b8152600401610d41919061180a565b602060405180830381865af4158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8291906117be565b9150610e83565b60ff811660008181526004850160205260409020549088908890818110610db257610db2611535565b9050602002013503610dd95760ff8116600090815260048401602052604090208290600101555b73__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808a8a8660ff16818110610e1357610e13611535565b905060200201358152602001858152506040518263ffffffff1660e01b8152600401610e3f919061180a565b602060405180830381865af4158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8091906117be565b91505b80610e8d816117eb565b915050610c40565b5061056d8882600080516020611866833981519152610875565b6000818152602083905260408120600201805460019290610ed190849061184d565b90915550505050565b60006000805160206118868339815191528610610f095760405162461bcd60e51b81526004016103689061160c565b610f12876105d7565b60ff1682148015610f2d5750610f27876105d7565b60ff1684145b610f965760405162461bcd60e51b815260206004820152603460248201527f496e6372656d656e74616c42696e617279547265653a206c656e677468206f66604482015273081c185d1a081a5cc81b9bdd0818dbdc9c9958dd60621b6064820152608401610368565b8560005b610fa3896105d7565b60ff168160ff1610156111ee5760008051602061188683398151915287878360ff16818110610fd457610fd4611535565b9050602002013510611050576040805162461bcd60e51b81526020600482015260248101919091527f496e6372656d656e74616c42696e617279547265653a207369626c696e67206e60448201527f6f6465206d757374206265203c20534e41524b5f5343414c41525f4649454c446064820152608401610368565b84848260ff1681811061106557611065611535565b905060200201602081019061107a9190611832565b60ff166000036111325773__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808581526020018a8a8660ff168181106110c4576110c4611535565b905060200201358152506040518263ffffffff1660e01b81526004016110ea919061180a565b602060405180830381865af4158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b91906117be565b91506111dc565b73__$6d81c1d65787d697695b56adedd76022ba$__6329a5f2f660405180604001604052808a8a8660ff1681811061116c5761116c611535565b905060200201358152602001858152506040518263ffffffff1660e01b8152600401611198919061180a565b602060405180830381865af41580156111b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d991906117be565b91505b806111e6816117eb565b915050610f9a565b506111f8886105f9565b14979650505050505050565b8260028101928215611232579160200282015b82811115611232578251825591602001919060010190611217565b5061123e929150611242565b5090565b5b8082111561123e5760008155600101611243565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561128057600080fd5b8235915060208084013567ffffffffffffffff808211156112a057600080fd5b818601915086601f8301126112b457600080fd5b8135818111156112c6576112c6611257565b8060051b604051601f19603f830116810181811085821117156112eb576112eb611257565b60405291825284820192508381018501918983111561130957600080fd5b938501935b828510156113275784358452938501939285019261130e565b8096505050505050509250929050565b6000806040838503121561134a57600080fd5b50508035926020909101359150565b803560ff8116811461136a57600080fd5b919050565b80356001600160a01b038116811461136a57600080fd5b6000806000806080858703121561139c57600080fd5b843593506113ac60208601611359565b9250604085013591506113c16060860161136f565b905092959194509250565b60008083601f8401126113de57600080fd5b50813567ffffffffffffffff8111156113f657600080fd5b6020830191508360208260051b850101111561141157600080fd5b9250929050565b6000806000806000806080878903121561143157600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561145757600080fd5b6114638a838b016113cc565b9096509450606089013591508082111561147c57600080fd5b5061148989828a016113cc565b979a9699509497509295939492505050565b600080604083850312156114ae57600080fd5b823591506114be6020840161136f565b90509250929050565b600060208083528351808285015260005b818110156114f4578581018301518582016040015282016114d8565b81811115611506576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561152e57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115735761157361154b565b5060010190565b60208082526027908201527f53656d6170686f726547726f757073426173653a2047524f55505f49445f4e4f6040820152661517d1561254d560ca1b606082015260800190565b6020808252602b908201527f53656d6170686f726547726f757073426173653a2053454e4445525f4e4f4e5f60408201526a23a927aaa82fa0a226a4a760a91b606082015260800190565b60208082526038908201527f496e6372656d656e74616c42696e617279547265653a206c656166206d75737460408201527f206265203c20534e41524b5f5343414c41525f4649454c440000000000000000606082015260800190565b600181815b808511156116a457816000190482111561168a5761168a61154b565b8085161561169757918102915b93841c939080029061166e565b509250929050565b6000826116bb575060016102fc565b816116c8575060006102fc565b81600181146116de57600281146116e857611704565b60019150506102fc565b60ff8411156116f9576116f961154b565b50506001821b6102fc565b5060208310610133831016604e8410600b8410161715611727575081810a6102fc565b6117318383611669565b80600019048211156117455761174561154b565b029392505050565b600061175c60ff8416836116ac565b9392505050565b634e487b7160e01b600052601260045260246000fd5b60008261178857611788611763565b500690565b60408101818360005b60028110156117b5578154835260209092019160019182019101611796565b50505092915050565b6000602082840312156117d057600080fd5b5051919050565b6000826117e6576117e6611763565b500490565b600060ff821660ff81036118015761180161154b565b60010192915050565b60408101818360005b60028110156117b5578151835260209283019290910190600101611813565b60006020828403121561184457600080fd5b61175c82611359565b600082198211156118605761186061154b565b50019056fe18009942081384ebf013f551c6956278f8f7e6b5ba58de96a877e7d2e169e67030644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220f27bbc9c1f3291c9ca7d454cc542c14f2ec620c9bc21824736702fc53b53a59564736f6c634300080e0033";

type SemaphoreGroupsFacetConstructorParams =
  | [
      linkLibraryAddresses: SemaphoreGroupsFacetLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemaphoreGroupsFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SemaphoreGroupsFacet__factory extends ContractFactory {
  constructor(...args: SemaphoreGroupsFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SemaphoreGroupsFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SemaphoreGroupsFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6d81c1d65787d697695b56adedd76022ba\\$__", "g"),
      linkLibraryAddresses["contracts/utils/cryptography/Hashes.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SemaphoreGroupsFacet> {
    return super.deploy(overrides || {}) as Promise<SemaphoreGroupsFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SemaphoreGroupsFacet {
    return super.attach(address) as SemaphoreGroupsFacet;
  }
  override connect(signer: Signer): SemaphoreGroupsFacet__factory {
    return super.connect(signer) as SemaphoreGroupsFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemaphoreGroupsFacetInterface {
    return new utils.Interface(_abi) as SemaphoreGroupsFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SemaphoreGroupsFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SemaphoreGroupsFacet;
  }
}

export interface SemaphoreGroupsFacetLibraryAddresses {
  ["contracts/utils/cryptography/Hashes.sol:PoseidonT3"]: string;
}
